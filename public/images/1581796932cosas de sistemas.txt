CGI-BIN no es un protocolo, es un modulo del servidor apache el cual permite al backend interpretar script

|sed ´s /rata/guapo/g´    intercambia la palabra rata por guapo..... g´ significa variable global.

a2enmod activa un modulo en apache (a2 enable mod)



servidores web: 11/11/19

/etc/apache2 

../available: son los sitios que estan disponibles para ser activados (pueden o no estar activados).
../enable: los que tienen un softlink hacia available.

que es softlink: es un acceso que apunta a un fichero determinado.

hardlink: es una copia con el mismo inodo de un fichero (cuando creas un hard de un fichero apunta al inodo del fichero original)

 (el numero de inodo del hard será el mismo que el inodo del fichero original en cambio en un softlink crea un inodo para el soft el cual es diferente al fichero original)

inodo: es donde se guarda la informacion de algo (fichero, carpeta, etc), cada archivo tiene un inodo, cada inodo tiene un numero asociado al fichero que corresponda

como se ve el numero de un inodo: ls -i (devuelve: #numero $nombre archivo)
como se crea un softlink: ln -s $Nombre (fichero de referencia ya existente) ruta/$nombreSoftLink 
como se hace un hardlink: ln $nombre ruta/$nombreHardLink

si se borra el fichero al que le has creado el softlink, el softlink no encontrará el fichero original y por tanto no funciona, en cambio si borras un archivo al que le has creado un hard, el hard permanece sustituyendo al archivo original.

ver si tenemos instalado apache: systemctl status apache2

NGINX:

antes de instalar nginx se debe de modificar el fichero "" para poder activar modulos.

Ejercicio Apache:

el fichero de virtual host de configuracion se debe de ser extension .conf 
el directorio de log de apache esta en: /var/log v 


Capitulo 2 UF2

hash: es una cadena de caracteres que representa el input (fichero) de manera inequivoca.
Tipos de hash: 
	MD5:
	SHA-1:
	RIPEMD:
UN HASH NO SE PUEDE DESHACER, LO QUE SE HACE, POR EJEMPLO PARA UN LOGIN, ES COMPARAR EL HASH CON EL INPUT DEL USUARIO PARA LOGREARSE

CRIPTOGRAFIA SIMETRICA: ES RAPIDA PERO POCO SEGURA
	ASIMETRICA: LENTA PERO SEGURA, SE DEBEN DE CIFRAR PAQUETES, COSAS GRANDES.


CIFRAR DE FORMA SIMETRICA:

DES:APLICA UNA CLAVE DE 56BITS (LO CIFRA)
3DES:ENCRIPTA 3 VECES PERO SOLAMENTE TIENE 2 CLAVES DE 56BITS
IDEA: UTILIZA CLAVE MAS LARGAS 128 BITS
AES:UTILIZA CIFRADO VARIABLE, DE 128, 192, 256 BITS

CIFRAR DE FORMA ASIMETRICA:

RSA: LA LONGITUD DE LA CLAVE PUEDE SER DE 1024, 2048, 4096 BITS
CURVAS ELIPTICAS:

	APLICACION DE LA CRIPTOGRAFIA:
SIGNATURA: LO QUE ENVÍO NO HA SUFRIDO CAMBIOS.
SOBRE DIGITAL: APLICA CRIPTOGRAFIA SIMETRICA I ASIMETRICA PARA PODER CONFIDENCIAL EL MENSAJE.
CERTIFICAT DIGITAL: ASEGURO QUE LO QUE ENVIO O RECIBO AUTENTICA AL EMISOR.



Generar un certificado para web:

1=> crear clave publica: openssl genrsa -out router.key 1024
	(-out) significa guardarla en el lugar donde te encuentres.

2=> crear dos componentes necesario: csr y crt
	crearlo: openssl req -new -key router.key -out router.csr
3=> crear el certificado:
	openssl x509 -req -days 365 -in router.csr -signkey router.key -out router.crt 
4=> mover el crt y la clave a la carpeta de certificado del servidor:
	cp router.crt /etc/ssl/certs/router.crt
	cp router.key /etc/ssl/certs/router.crt
5=> activar el modulo de apache que permite gestionar el https
	a2enmod ssl
6=> ir al url donde queremos tener https y modificamos el virtualhost:
	cd /etc/apache2/sites-available
	modificamos el virtualhost (pruebas.conf) vim pruebas.conf
	introducimos en el fichero:
		SSLEngine on
		SSLCertificateFile /etc/ssl/certs/router.crt
		SSLCertificateKeyFile /etc/ssl/certs/router.key
7=> reiniciar el servidor
	systemctl restart apache2

**HACER CAPTURAS DE TODOS LOS PASOS ANTERIORES (HACERLO CON EJEMPLOS.CONF)**


Capitulo 3: UF2 APACHE - BALANCER
	-1=> deshabilitar las webs pruebas.conf y ejemplos.cof *a2dissite ejemplo.conf* (completado)
	 0=> clonar 2veces el servidor: 1 RedNat 1 RedInterna (completado)
	 0.1=> configurar una nueva red interna para el server antiguo(Balancer) y conectar los dos servidores nuevos a esta red1(Completado)
	 0.2=> configurar la red de cada nuevo servidor:
		cd /etc/netplan copiamos el fichero 01-netcfg.yaml y lo configuramos (foto movil "confserverred")
		netplan apply  (Completado)
	 0.3=> netstat -rn ver las rutas 
		configurar la nueva ruta para llegar al Balancer (HACERLO PARA LOS DOS NUEVOS SERVER): 
			route add -net 0.0.0.0/0 (default) gw 10.0.1.2(IP DEL BALANCER)
	 0.4=> en el Balancer:
		deberia de llegar a tdos lados.
	 1=> En el cliente:
		hacer que el cliente llegue a la redinterna del los servidores: 
		route add -net 10.0.1.0/24 gw 192.168.1.2 
	 1.1=> activar ipforward para poder hacer ping a los demas servidores (en el Balancer)
otra opcion: /proc/sys/net/ipv4/ip_forward poner un 1 i no es necesario reiniciar

		vim /etec/sysctl.conf
		descomentar: net.ipv4.ip_forward=1
	 Parte 2:
		Activar un site (pagina web):
			ir a /etc/apache2/site-available
		copiar uno de los ficheros .conf para obtener la informacion
		
		